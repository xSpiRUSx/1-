

Функция GET_ОбновитьСписки() Экспорт
	
	Соединение = Новый HTTPСоединение("tasks.googleapis.com",443,,,,,Новый ЗащищенноеСоединениеOpenSSL);
	Заголовки  = Новый Соответствие;		
	Заголовки.Вставить("Authorization","Bearer " + РегистрыСведений.НастройкиПодключенияГуглСервисов.ПолучитьТокен());
	ЗапросHTTP = Новый HTTPЗапрос("/tasks/v1/users/@me/lists", Заголовки);
	Ответ = Соединение.ВызватьHTTPМетод("GET", ЗапросHTTP);	
	
	Если НЕ Ответ.КодСостояния = 200 Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрШаблон("Ошибка получения параметров авторизации: %1", Ответ.ПолучитьТелоКакСтроку()));	
	КонецЕсли;
	
	ТекстОтвета = Ответ.ПолучитьТелоКакСтроку();
	
	ЧтениеJSON = Новый ЧтениеJSON; 
	ЧтениеJSON.УстановитьСтроку(ТекстОтвета); 
	ЗаписьJSON = ПрочитатьJSON(ЧтениеJSON); 
	ЧтениеJSON.Закрыть();
	
	Списки = ЗаписьJSON.items;
	
	Для Каждого Список Из Списки Цикл
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Задачи.IDЗадачи КАК IDЗадачи,
		|	Задачи.Наименование КАК Наименование,
		|	Задачи.Ссылка КАК Ссылка,
		|	Задачи.ДатаИзменения КАК ДатаИзменения
		|ИЗ
		|	Справочник.Задачи КАК Задачи
		|ГДЕ
		|	Задачи.ЭтоГруппа
		|	И Задачи.IDЗадачи = &IDЗадачи";
		
		Запрос.УстановитьПараметр("IDЗадачи", Список.id);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			
			Если ВыборкаДетальныеЗаписи.ДатаИзменения < ДатаИзФорматаGoogle(Список.updated) Тогда
				ЗадачаОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
				ЗадачаОбъект.Наименование = Список.Title;
				ЗадачаОбъект.ДатаИзменения = ДатаИзФорматаGoogle(Список.updated);
				ЗадачаОбъект.Записать();
			КонецЕсли;
			
		Иначе	
			
			ЗадачаОбъект = Справочники.Задачи.СоздатьГруппу();
			ЗадачаОбъект.Наименование = Список.Title;
			ЗадачаОбъект.IDЗадачи = Список.id;
			ЗадачаОбъект.ДатаИзменения = ДатаИзФорматаGoogle(Список.updated);
			ЗадачаОбъект.Записать();
			
		КонецЕсли;
		
	КонецЦикла;

КонецФункции

Функция GET_ОбновитьЗадачи() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Задачи.IDЗадачи КАК IDЗадачи,
	|	Задачи.Наименование КАК Наименование,
	|	Задачи.Ссылка КАК Ссылка,
	|	Задачи.ДатаИзменения КАК ДатаИзменения
	|ИЗ
	|	Справочник.Задачи КАК Задачи
	|ГДЕ
	|	Задачи.ЭтоГруппа";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Соединение = Новый HTTPСоединение("tasks.googleapis.com",443,,,,,Новый ЗащищенноеСоединениеOpenSSL);
		Заголовки  = Новый Соответствие;		
		Заголовки.Вставить("Authorization","Bearer " + РегистрыСведений.НастройкиПодключенияГуглСервисов.ПолучитьТокен());
		Заголовки.Вставить("showCompleted",Истина);
		Заголовки.Вставить("showHidden",Истина);
		
		
		ЗапросHTTP = Новый HTTPЗапрос("/tasks/v1/lists/" + ВыборкаДетальныеЗаписи.IDЗадачи + "/tasks?showCompleted=TRUE&showHidden=TRUE", Заголовки);
		Ответ = Соединение.ВызватьHTTPМетод("GET", ЗапросHTTP);	
		
		Если НЕ Ответ.КодСостояния = 200 Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрШаблон("Ошибка получения параметров авторизации: %1", Ответ.ПолучитьТелоКакСтроку()));	
		КонецЕсли;
		
		ТекстОтвета = Ответ.ПолучитьТелоКакСтроку();
		
		ЧтениеJSON = Новый ЧтениеJSON; 
		ЧтениеJSON.УстановитьСтроку(ТекстОтвета); 
		ЗаписьJSON = ПрочитатьJSON(ЧтениеJSON); 
		ЧтениеJSON.Закрыть();
		
		
		// Если в списке нет задач то пропустим его
		Если НЕ ЗаписьJSON.Свойство("items") Тогда
			Продолжить
		КонецЕсли;
		
		
		МассивЗадач = ЗаписьJSON.Items;
		
		Для Каждого Задача Из МассивЗадач Цикл	
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	Задачи.IDЗадачи КАК IDЗадачи,
			|	Задачи.Наименование КАК Наименование,
			|	Задачи.Ссылка КАК Ссылка,
			|	Задачи.ДатаИзменения КАК ДатаИзменения
			|ИЗ
			|	Справочник.Задачи КАК Задачи
			|ГДЕ
			|	НЕ Задачи.ЭтоГруппа
			|	И Задачи.IDЗадачи = &IDЗадачи";
			
			Запрос.УстановитьПараметр("IDЗадачи", Задача.id);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаЗадач = РезультатЗапроса.Выбрать();
			
			Если ВыборкаЗадач.Следующий() Тогда
				
				Если ВыборкаЗадач.ДатаИзменения < ДатаИзФорматаGoogle(Задача.updated) Тогда
					ЗадачаОбъект = ВыборкаЗадач.Ссылка.ПолучитьОбъект();
					ЗадачаОбъект.Наименование = Задача.Title;
					ЗадачаОбъект.Выполнено = ?(Задача.status = "completed", Истина, Ложь);
					ЗадачаОбъект.ТекстЗадачи = ?(Задача.Свойство("notes"), Задача.notes, "");
					ЗадачаОбъект.ДатаИзменения = ДатаИзФорматаGoogle(Задача.updated);
					ЗадачаОбъект.Записать();
				КонецЕсли;
				
			Иначе	
				
				ЗадачаОбъект = Справочники.Задачи.СоздатьЭлемент();
				ЗадачаОбъект.Родитель = Справочники.Задачи.НайтиПоРеквизиту("IDЗадачи", ВыборкаДетальныеЗаписи.IDЗадачи);
				ЗадачаОбъект.Наименование = Задача.Title;
				ЗадачаОбъект.Выполнено = ?(Задача.status = "completed", Истина, Ложь);
				ЗадачаОбъект.IDЗадачи = Задача.id;
				ЗадачаОбъект.ДатаИзменения = ДатаИзФорматаGoogle(Задача.updated);
				ЗадачаОбъект.ТекстЗадачи = ?(Задача.Свойство("notes"), Задача.notes, "");
				ЗадачаОбъект.Записать();
				
			КонецЕсли;
			
		КонецЦикла;
		
		
		//МассивЗадач = 
		
		// 2021-04-22T00:00:00.000Z
		
		
	КонецЦикла;
	
		
		
		
		
	
	
КонецФункции


Функция ДатаВФорматеGoogle(Дата)
	Возврат Формат(Дата, "ДФ='yyyy-MM-dd''T''HH:mm:ssZ'")
КонецФункции // ДатаВФорматеЧЗ()
 
Функция ДатаИзФорматаGoogle(ДатаGoogle)
	Возврат Дата(Лев(ДатаGoogle, 4) + Сред(ДатаGoogle, 6, 2) + Сред(ДатаGoogle, 9, 2) + Сред(ДатаGoogle, 12, 2) + Сред(ДатаGoogle, 15, 2));
КонецФункции // ДатаВФорматеЧЗ()


