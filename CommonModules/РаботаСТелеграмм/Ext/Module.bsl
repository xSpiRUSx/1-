

#Область Запросы

&НаСервере
Функция ОтправитьHTTPЗапрос(АдресЗапроса)
	
	СоединениеHTTP = Новый HTTPСоединение("api.telegram.org", 443,,,,,Новый ЗащищенноеСоединениеOpenSSL());
	
	ЗапросHTTP = Новый HTTPЗапрос(АдресЗапроса);
	
	Попытка
		ОтветHTTP = СоединениеHTTP.Получить(ЗапросHTTP);
	Исключение

	КонецПопытки;
	
	СтрокаJSON = СоответствиеИзСтрокиJSON(ОтветHTTP.ПолучитьТелоКакСтроку());
	
	Возврат СтрокаJSON;
	
КонецФункции


Функция АдресЗапроса_ПолучитьНовыеСообщения()
	
	АдресЗапроса = "bot" + Константы.ТелеграмТокенБота.Получить() + "/getUpdates" + 
		"?offset=" + Строка(Формат(Константы.ТелеграмIDпоследнегоСообщения.Получить() + 1, "ЧГ=0"));
	
	Возврат АдресЗапроса;
	
КонецФункции


#КонецОбласти

#Область Команды

Процедура ОбработатьКоманду_get_order()
	
	ТекстСообщения = "<b>Выберите задачу</b>";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказНаРаботу.Ссылка КАК Ссылка,
	|	ЗаказНаРаботу.Заголовок КАК Заголовок,
	|	ЗаказНаРаботу.Номер КАК Номер
	|ИЗ
	|	Документ.ЗаказНаРаботу КАК ЗаказНаРаботу
	|ГДЕ
	|	ЗаказНаРаботу.Статус = &Статус";
	
	Запрос.УстановитьПараметр("Статус", Справочники.СтатусыЗадач.ВРаботе);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	МассивКнопок = Новый Массив;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Массив = Новый Массив;
		
		СоответствиеОтвета = Новый Соответствие;
		СоответствиеОтвета.Вставить("О", "СЗ");
		СоответствиеОтвета.Вставить("НЗ", Строка(ВыборкаДетальныеЗаписи.Номер));
				
		Кнопка = Новый Соответствие;
		Кнопка.Вставить("callback_data", СоответствиеВСтрокуОтвета(СоответствиеОтвета));
		//Кнопка.Вставить("callback_data", "Операция__" + Строка(ВыборкаДетальныеЗаписи.Номер));
		Кнопка.Вставить("text", ВыборкаДетальныеЗаписи.Заголовок);
		
		Массив.Добавить(Кнопка);
		
		МассивКнопок.Добавить(Массив);
	КонецЦикла;	
	
	СтруктураКнопок = Новый Соответствие;
	СтруктураКнопок.Вставить("inline_keyboard", МассивКнопок);
	
	ТекстКнопок = СтрокаJSONИзСоответствия(СтруктураКнопок);
	
	АдресЗапроса = "bot" 
		+ Константы.ТелеграмТокенБота.Получить() 
		+ "/sendMessage"
		+ "?chat_id=" 
		+ "301915169"
		+ "&text=" 
		+ ТекстСообщения
		+ "&parse_mode=HTML"
		+ "&reply_markup="
		+ ТекстКнопок;
	
	Результат = ОтправитьHTTPЗапрос(АдресЗапроса);	
				
КонецПроцедуры

Процедура ОбработатьКоманду_get_tasks()
	
	ТекстСообщения = "Выберите задачу";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МоиЗадачи.Ссылка КАК Ссылка,
	|	МоиЗадачи.Наименование КАК Наименование,
	|	МоиЗадачи.СтатусЗадачи КАК СтатусЗадачи,
	|	МоиЗадачи.Контакт КАК Контакт,
	|	МоиЗадачи.Код КАК Код,
	|	МоиЗадачи.ЭтоГруппа КАК ЭтоГруппа,
	|	ЕстьNull(МоиЗадачи.Выполнена, Ложь) КАК Выполнена
	|ИЗ
	|	Справочник.МоиЗадачи КАК МоиЗадачи
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка ИЕРАРХИЯ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	МассивКнопок = Новый Массив;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если НЕ ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Ссылка) Тогда
			Продолжить
		КонецЕсли;
		
		Если ВыборкаДетальныеЗаписи.ЭтоГруппа  Тогда
			
			Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Наименование) Тогда
				ТекстЗадачи = "<b>" + ВыборкаДетальныеЗаписи.Наименование + "</b>";
			Иначе
				Продолжить
			КонецЕсли;	
		Иначе
			Если ВыборкаДетальныеЗаписи.Выполнена = Истина Тогда
				Продолжить
			КонецЕсли;
			
			ТекстЗадачи = ВыборкаДетальныеЗаписи.Наименование;
		КонецЕсли;
		
		Массив = Новый Массив;
		
		Кнопка = Новый Соответствие;
		Кнопка.Вставить("callback_data", "task_" + Строка(ВыборкаДетальныеЗаписи.Код));
		Кнопка.Вставить("text", ТекстЗадачи);
		
		Массив.Добавить(Кнопка);
		
		МассивКнопок.Добавить(Массив);
	КонецЦикла;	
	
	СтруктураКнопок = Новый Соответствие;
	СтруктураКнопок.Вставить("inline_keyboard", МассивКнопок);
	
	ТекстКнопок = СтрокаJSONИзСоответствия(СтруктураКнопок);
	
	АдресЗапроса = "bot" 
		+ Константы.ТелеграмТокенБота.Получить() 
		+ "/sendMessage"
		+ "?chat_id=" 
		+ "301915169"
		+ "&text=" 
		+ ТекстСообщения
		+ "&parse_mode=HTML"
		+ "&reply_markup="
		+ ТекстКнопок;
	
	Результат = ОтправитьHTTPЗапрос(АдресЗапроса);	
				
КонецПроцедуры

Процедура ОбработатьКоманду_create_task(ТекстЗадачи)
	
	НоваяЗадача = Справочники.МоиЗадачи.СоздатьЭлемент();
	НоваяЗадача.Наименование = ТекстЗадачи;
	НоваяЗадача.ДатаСоздания = ТекущаяДата();
	НоваяЗадача.ДатаИзменения = ТекущаяДата();
	НоваяЗадача.СтатусЗадачи = Справочники.СтатусыЗадач.Новая;
	НоваяЗадача.Родитель = Справочники.МоиЗадачи.НайтиПоКоду(24);
	НоваяЗадача.Записать();
					
КонецПроцедуры



#КонецОбласти


&НаСервере
Процедура ОбработатьСообщения() Экспорт
		
	Результат = ОтправитьHTTPЗапрос(АдресЗапроса_ПолучитьНовыеСообщения());
	
	МассивСообщений = Результат.Получить("result");
		
	Для Каждого СообщениеМассива Из МассивСообщений Цикл
		
		Сообщение = СообщениеМассива.Получить("message"); 
		
		Если Сообщение <> Неопределено Тогда 
			
			ОбработатьСообщение_message(Сообщение);
			
		КонецЕсли;	
		
		Сообщение = СообщениеМассива.Получить("callback_query");
		
		Если Сообщение <> Неопределено Тогда // Обработка сообщений при нажатии на кнопку
			
			ОбработатьСообщение_callback_query(Сообщение);
			
		КонецЕсли;
		
		
		Константы.ТелеграмIDпоследнегоСообщения.Установить(СообщениеМассива.Получить("update_id"));
		
	КонецЦикла
	
	
	
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьСообщение_message(Сообщение) Экспорт
	
	Если Сообщение.Получить("text") = "/get_order" Тогда // Получение списка задач и формирование кнопок
		
		ОбработатьКоманду_get_order();
		
	КонецЕсли;
	
	Если Сообщение.Получить("text") = "/get_tasks" Тогда // Получение списка задач и формирование кнопок
		
		ОбработатьКоманду_get_tasks();
		
	КонецЕсли;
	
	//Если Сообщение.Получить("text") = "/create_task" Тогда // Получение списка задач и формирование кнопок
	//	
	//	ОбработатьКоманду_create_task();
	//	
	//КонецЕсли;

	
	ТекстСообщения = Сообщение.Получить("text");
	
	Если СтрНачинаетсяС(ТекстСообщения, "#") Тогда // СоздатьСообщение
		
		ОбработатьКоманду_create_task(СтрЗаменить(ТекстСообщения, "# ", ""));
		
	КонецЕсли;

	
КонецПроцедуры

&НаСервере
Процедура ОбработатьСообщение_callback_query(Сообщение) Экспорт
	
	//Если Кнопка.Вставить("callback_data", "code_" + НоваяЗадача.Код + "_ct_" + Строка(ВыборкаДетальныеЗаписи.Код));
	
	ДанныеСообщения = Сообщение.Получить("data");
	
	СоответствиеОтвета = СтрокаОтветаВСоответствие(ДанныеСообщения);
	
	
	Если СоответствиеОтвета.Получить("О") = "СЗ" Тогда // Операция Список заказов
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказНаРаботу.Заголовок КАК Заголовок,
		|	ЗаказНаРаботу.Заказчик КАК Заказчик,
		|	ЗаказНаРаботу.Статус КАК Статус,
		|	ЗаказНаРаботу.Комментарий КАК Комментарий,
		|	ЗаказНаРаботу.Конфигурация КАК Конфигурация,
		|	ЗаказНаРаботу.ЗатратыВремени КАК ЗатратыВремени,
		|	ЗаказНаРаботу.СуммаЗаказа КАК СуммаЗаказа,
		|	ЗаказНаРаботу.Номер КАК Номер
		|ИЗ
		|	Документ.ЗаказНаРаботу КАК ЗаказНаРаботу
		|ГДЕ
		|	ЗаказНаРаботу.Номер = &Номер";
		
		Запрос.УстановитьПараметр("Номер", Число(СоответствиеОтвета.Получить("НЗ")));
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			
			ТекстПоЗадаче = 
			"<b>Заголовок: " + ВыборкаДетальныеЗаписи.Заголовок + "</b>" + Символы.ПС + Символы.ПС + 
			"Статус: " + ВыборкаДетальныеЗаписи.Статус + Символы.ПС + 
			"Заказчик: " + ВыборкаДетальныеЗаписи.Заказчик + Символы.ПС + 
			"Комментарий: " + ВыборкаДетальныеЗаписи.Комментарий + Символы.ПС + 
			"Конфигурация: " + ВыборкаДетальныеЗаписи.Конфигурация + Символы.ПС + 
			"Норма времени: " + ВыборкаДетальныеЗаписи.ЗатратыВремени + Символы.ПС + 
			"Сумма заказа: " + ВыборкаДетальныеЗаписи.СуммаЗаказа;
			
			
			СоответствиеОтвета = Новый Соответствие;
			СоответствиеОтвета.Вставить("О", "ДЗ");
			СоответствиеОтвета.Вставить("НЗ", Строка(ВыборкаДетальныеЗаписи.Номер));
			
			
			МассивКнопок = Новый Массив;
			
			Массив = Новый Массив;
			
			Кнопка = Новый Соответствие;
			СоответствиеОтвета.Вставить("ДЗ", "ИзменитьВремя");
			Кнопка.Вставить("callback_data", СоответствиеВСтрокуОтвета(СоответствиеОтвета));
			Кнопка.Вставить("text", "Изменить время");
			
			Массив.Добавить(Кнопка);
			
			Кнопка = Новый Соответствие;
			СоответствиеОтвета.Вставить("ДЗ", "ДобавитьКоментарий");
			Кнопка.Вставить("callback_data", СоответствиеВСтрокуОтвета(СоответствиеОтвета));
			Кнопка.Вставить("text", "Добавить коментарий");
			
			Массив.Добавить(Кнопка);
			
			МассивКнопок.Добавить(Массив);
			
			Массив = Новый Массив;
			
			Кнопка = Новый Соответствие;
			СоответствиеОтвета.Вставить("ДЗ", "ИзменитьСтатус");
			Кнопка.Вставить("callback_data", СоответствиеВСтрокуОтвета(СоответствиеОтвета));
			Кнопка.Вставить("text", "Изменить статус");
			
			Массив.Добавить(Кнопка);
			
			МассивКнопок.Добавить(Массив);
			
			СтруктураКнопок = Новый Соответствие;
			СтруктураКнопок.Вставить("inline_keyboard", МассивКнопок);
			
			ТекстКнопок = СтрокаJSONИзСоответствия(СтруктураКнопок);
			

		КонецЕсли;	
		
		СтруктураКнопок = Новый Соответствие;
		СтруктураКнопок.Вставить("inline_keyboard", МассивКнопок);
		
		ТекстКнопок = СтрокаJSONИзСоответствия(СтруктураКнопок);
		
		
		АдресTelegramAPI = "api.telegram.org";
		
		Токен = "773064852:AAECIREZnljKHWSEgm_tdocfoTDkhKhiihs";
		
		СоединениеHTTP  =  Новый HTTPСоединение(АдресTelegramAPI,443,,,,,Новый ЗащищенноеСоединениеOpenSSL());
		
		АдресЗапроса = "bot" 
		+ Токен 
		+ "/sendMessage"
		+ "?chat_id=" 
		+ "301915169"
		+ "&text=" 
		+ ТекстПоЗадаче
		+ "&parse_mode=html"
		+ "&reply_markup="
		+ ТекстКнопок;
		
		ЗапросHTTP = Новый HTTPЗапрос(АдресЗапроса);
		Попытка
			ОтветHTTP = СоединениеHTTP.Получить(ЗапросHTTP);
			Сообщить(ОтветHTTP.ПолучитьТелоКакСтроку());
			
		Исключение
			ВызватьИсключение "Ошибка отправки сообщения";
		КонецПопытки;
		
		
		
	ИначеЕсли СоответствиеОтвета.Получить("О") = "ИЗ" Тогда // Информация по заказу
		
		ТекстПоЗадаче =  "Выберите действие:";	
		
		СоответствиеОтвета = Новый Соответствие;
		СоответствиеОтвета.Вставить("О", "ДЗ");
		СоответствиеОтвета.Вставить("НЗ", Строка(ВыборкаДетальныеЗаписи.Код));
		
		
		МассивКнопок = Новый Массив;
		
		Массив = Новый Массив;
		
		Кнопка = Новый Соответствие;
		СоответствиеОтвета.Вставить("ДЗ", "ИзменитьВремя");
		Кнопка.Вставить("callback_data", СоответствиеВСтрокуОтвета(СоответствиеОтвета));
		Кнопка.Вставить("text", "Изменить время");
		
		Массив.Добавить(Кнопка);
	
		
		Кнопка = Новый Соответствие;
		СоответствиеОтвета.Вставить("ДЗ", "ДобавитьКоментарий");
		Кнопка.Вставить("callback_data", СоответствиеВСтрокуОтвета(СоответствиеОтвета));
		Кнопка.Вставить("text", "Добавить коментарий");
		
		Массив.Добавить(Кнопка);
		
		МассивКнопок.Добавить(Массив);
		Массив = Новый Массив;

		Кнопка = Новый Соответствие;
		СоответствиеОтвета.Вставить("ДЗ", "ИзменитьСтатус");
		Кнопка.Вставить("callback_data", СоответствиеВСтрокуОтвета(СоответствиеОтвета));
		Кнопка.Вставить("text", "Изменить статус");
		
		Массив.Добавить(Кнопка);
		
		МассивКнопок.Добавить(Массив);
		
		СтруктураКнопок = Новый Соответствие;
		СтруктураКнопок.Вставить("inline_keyboard", МассивКнопок);
		
		ТекстКнопок = СтрокаJSONИзСоответствия(СтруктураКнопок);
		
		
		АдресTelegramAPI = "api.telegram.org";
		
		Токен = "773064852:AAECIREZnljKHWSEgm_tdocfoTDkhKhiihs";
		
		СоединениеHTTP  =  Новый HTTPСоединение(АдресTelegramAPI,443,,,,,Новый ЗащищенноеСоединениеOpenSSL());
		
		АдресЗапроса = "bot" 
		+ Токен 
		+ "/sendMessage"
		+ "?chat_id=" 
		+ "301915169"
		+ "&text=" 
		+ ТекстПоЗадаче
		+ "&parse_mode=HTML";
		//+ "&reply_markup="
		//+ ТекстКнопок;
		
		ЗапросHTTP = Новый HTTPЗапрос(АдресЗапроса);
		Попытка
			ОтветHTTP = СоединениеHTTP.Получить(ЗапросHTTP);
			Сообщить(ОтветHTTP.ПолучитьТелоКакСтроку());
			
		Исключение
			ВызватьИсключение "Ошибка отправки сообщения";
		КонецПопытки;
	
	КонецЕсли;
	
	Если СтрНайти(ДанныеСообщения, "ct_") Тогда
		
		НачалоКода = СтрНайти(ДанныеСообщения, "_", ,,1) + 1;
		КонецКода =  СтрНайти(ДанныеСообщения, "_", ,,2);
		
		Код = Сред(ДанныеСообщения, НачалоКода, КонецКода - НачалоКода);
		
		НачалоКодаКЛ = СтрНайти(ДанныеСообщения, "_", ,,3) + 1;
		
		КодКЛ = Сред(ДанныеСообщения, НачалоКодаКЛ);
		
		ЗадачаОбъект = Справочники.МоиЗадачи.НайтиПоКоду(Код).ПолучитьОбъект();
		ЗадачаОбъект.Контакт = Справочники.КонтактныеЛицаКонтрагентов.НайтиПоКоду(КодКЛ);
		ЗадачаОбъект.Записать();
		
	ИначеЕсли СтрНайти(ДанныеСообщения, "task_") Тогда	
		
		
	Иначе
		
				
	КонецЕсли;
	


КонецПроцедуры


Функция СтрокаОтветаВСоответствие(СтрокаОтвета)
	
	СоответствиеОтвета = Новый Соответствие;
	
	МассивСтрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрокаОтвета, "/");
	
	Для Каждого ЗначениеМассива Из МассивСтрок Цикл
		
		МассивЗначенияМассива = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ЗначениеМассива, "_"); 		
		
		СоответствиеОтвета.Вставить(МассивЗначенияМассива[0], МассивЗначенияМассива[1]);
		
	КонецЦикла;
	
	Возврат СоответствиеОтвета;
	
КонецФункции

Функция СоответствиеВСтрокуОтвета(СоответствиеОтвета)
	
	СтрокаОтвета = "";
	
	Для Каждого СтрокаСоответствия Из СоответствиеОтвета Цикл
		
		СтрокаОтвета = СтрокаОтвета + СтрокаСоответствия.Ключ + "_" + СтрокаСоответствия.Значение;
		
		СтрокаОтвета = СтрокаОтвета + "/";
		
	КонецЦикла;
	
	СтроковыеФункцииКлиентСервер.УдалитьПоследнийСимволВСтроке(СтрокаОтвета);
	
	
	Возврат СтрокаОтвета;
	
КонецФункции


Функция СоответствиеИзСтрокиJSON(СтрокаJSON) Экспорт
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(СтрокаJSON);
	ОтветСоответствие = ПрочитатьJSON(ЧтениеJSON, Истина);
	ЧтениеJSON.Закрыть();
	
	Возврат ОтветСоответствие;
	
КонецФункции

Функция СтрокаJSONИзСоответствия(СоответствиеДанных) Экспорт
	
	ПараметрыЗаписиJSON = Новый ПараметрыЗаписиJSON;
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку(ПараметрыЗаписиJSON);
	ЗаписатьJSON(ЗаписьJSON, СоответствиеДанных);
	Возврат ЗаписьJSON.Закрыть();
	
КонецФункции
