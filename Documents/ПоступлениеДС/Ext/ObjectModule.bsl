
Процедура ОбработкаПроведения(Отказ, Режим)
	
	// регистр Взаиморасчеты Приход
	Движения.Взаиморасчеты.Записывать = Истина;
	Для Каждого ТекСтрокаРасшифровкаПлатежа Из РасшифровкаПлатежа Цикл
		Движение = Движения.Взаиморасчеты.Добавить();
		Движение.Период = ТекСтрокаРасшифровкаПлатежа.Заказ.Дата;
		Движение.Контрагент = Контрагент;
		Движение.Задача = ТекСтрокаРасшифровкаПлатежа.Заказ;
		Движение.Сумма = -ТекСтрокаРасшифровкаПлатежа.Сумма;
		
		
		НаборЗаписей = РегистрыНакопления.Работы.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(ТекСтрокаРасшифровкаПлатежа.Заказ);
		НаборЗаписей.Прочитать();
		
		Если НаборЗаписей.Количество() = 1 Тогда
			
			Если Проведен Тогда
				НаборЗаписей[0].Оплачено = ТекСтрокаРасшифровкаПлатежа.Сумма;
			Иначе
				НаборЗаписей[0].Оплачено = 0;
			КонецЕсли;
			
			НаборЗаписей.Записать(Истина);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	//{{__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказНаРаботу") Тогда
		// Заполнение шапки
		Контрагент = ДанныеЗаполнения.Заказчик;
		Сумма = ДанныеЗаполнения.СуммаЗаказа;
		
		НоваяСтрока = РасшифровкаПлатежа.Добавить();
		НоваяСтрока.Заказ = ДанныеЗаполнения.Ссылка;
		НоваяСтрока.Сумма = ДанныеЗаполнения.СуммаЗаказа;
		
		
	КонецЕсли;
	//}}__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
КонецПроцедуры
